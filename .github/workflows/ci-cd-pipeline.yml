name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn clean install -DskipTests
    
    - name: Run Tests
      run: mvn test
    
    - name: Generate Test Report
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: true
    
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: task-manager-jar
        path: target/*.jar

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker Image
      run: docker build -t task-manager-api:${{ github.sha }} .
    
    - name: Save Docker Image
      run: docker save task-manager-api:${{ github.sha }} > task-manager-api.tar
    
    - name: Upload Docker Image Artifact
      uses: actions/upload-artifact@v3
      with:
        name: docker-image
        path: task-manager-api.tar

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Maven Verify
      run: mvn verify
    
    - name: Check Code Coverage
      run: mvn jacoco:report
    
    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: target/site/jacoco/

  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: [build-and-test, docker-build, security-scan, code-quality]
    if: always()
    
    steps:
    - name: Send Success Notification
      if: ${{ needs.build-and-test.result == 'success' && needs.docker-build.result == 'success' }}
      run: |
        echo "✅ CI/CD Pipeline completed successfully!"
        echo "Build: ${{ needs.build-and-test.result }}"
        echo "Docker: ${{ needs.docker-build.result }}"
        echo "Security: ${{ needs.security-scan.result }}"
        echo "Quality: ${{ needs.code-quality.result }}"
    
    - name: Send Failure Notification
      if: ${{ needs.build-and-test.result == 'failure' || needs.docker-build.result == 'failure' }}
      run: |
        echo "❌ CI/CD Pipeline failed!"
        echo "Build: ${{ needs.build-and-test.result }}"
        echo "Docker: ${{ needs.docker-build.result }}"
        exit 1